<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.smartconsultor</groupId>
  <artifactId>com-smartconsultor-microservice</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>
  <modules>
    <!-- infrastructure components -->
    <module>common</module>
    <module>gateway</module>
    <!-- service components -->
    <module>account</module>
  </modules>
  <properties>
    <!-- java components -->
    <java.version>21</java.version> 
    <!-- mvn components -->
    <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
    <maven.shade.plugin.version>3.6.0</maven.shade.plugin.version>
    <!-- vertx components -->
    <vertx.version>4.5.9</vertx.version>
    <!-- log components -->
    <log4j.version>2.23.1</log4j.version>
    <logstash.gelf.version>1.13.0</logstash.gelf.version>
    <!-- test components -->
    <junit.version>4.12</junit.version> 
    <assertj.core.version>3.26.3</assertj.core.version> 
    <awaitility.version>1.7.0</awaitility.version> 
    <rest.assured.version>5.5.0</rest.assured.version> 
    <!-- jib components -->
    <jib.maven.plugin.version>3.4.3</jib.maven.plugin.version> 
    <!--overridden in each project packaged as a fat jar -->
    <main.verticle/> 
    <main.launcher/>
    <main.jdwp/> 
    <main.image/>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-stack-depchain</artifactId>
        <version>${vertx.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-core</artifactId>
    </dependency>  
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-rx-java</artifactId>
    </dependency>    
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-infinispan</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-health-check</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-codegen</artifactId>
      <classifier>processor</classifier>
      <scope>provided</scope>
    </dependency>    
    <!-- Log4j2 dependencies -->
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${log4j.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>${log4j.version}</version>
        <scope>compile</scope>
    </dependency>    
    <!-- GELF Log4j2 Appender -->
    <dependency>
        <groupId>biz.paluch.logging</groupId>
        <artifactId>logstash-gelf</artifactId>
        <version>${logstash.gelf.version}</version>
        <scope>compile</scope>
    </dependency>  
    <!-- Test dependencies -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-unit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${awaitility.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${rest.assured.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
          <generatedSourcesDirectory>src/main/generated</generatedSourcesDirectory>
          <generatedTestSourcesDirectory>src/test/generated</generatedTestSourcesDirectory>
        </configuration>
        <executions>
          <execution>
            <id>default-compile</id>
            <configuration>
              <annotationProcessors>
                <annotationProcessor>io.vertx.codegen.CodeGenProcessor</annotationProcessor>
              </annotationProcessors>
              <generatedSourcesDirectory>src/main/generated</generatedSourcesDirectory>
              <compilerArgs>
                <arg>-Acodegen.output=${project.basedir}/src/main</arg>
              </compilerArgs>
            </configuration>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <configuration>
              <annotationProcessors>
                <annotationProcessor>io.vertx.codegen.CodeGenProcessor</annotationProcessor>
              </annotationProcessors>
              <generatedTestSourcesDirectory>src/test/generated</generatedTestSourcesDirectory>
              <compilerArgs>
                <arg>-Acodegen.output=${project.basedir}/src/test</arg>
              </compilerArgs>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven.shade.plugin.version}</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
              <configuration>
                <transformers>
                  <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                    <manifestEntries>
                      <Main-Class>${main.launcher}</Main-Class>
                      <Main-Verticle>${main.verticle}</Main-Verticle>
                    </manifestEntries>
                  </transformer>
                  <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                    <resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
                  </transformer>
                </transformers>
                <artifactSet>
                </artifactSet>
                <outputFile>${project.build.directory}/${project.artifactId}-fat.jar</outputFile>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <version>${jib.maven.plugin.version}</version>
            <configuration>
            <to>
                <image>${main.image}</image>
            </to>
            <container>
                <mainClass>${main.launcher}</mainClass>
                <args>
                <arg>run</arg>
                <arg>${main.verticle}</arg>
                <arg>-cluster</arg>
                <arg>-conf</arg>
                <arg>/app/config/docker.json</arg>              
                </args>
                <ports>
                <port>8080</port>
                <port>7800</port>
                <port>${main.jdwp}</port> <!-- Port cho JDWP -->
                </ports>
            </container>
            <extraDirectories>
                <paths>
                <path>
                    <from>${project.basedir}/src/config</from>
                    <into>/app/config</into>
                </path>
                </paths>
            </extraDirectories>          
            </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>